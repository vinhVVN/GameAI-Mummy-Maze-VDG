--- New Session Started ---
Bước 1: cur state= ((1, 1), ((5, 9),)), h=14.0
-> Check neighbor ((1, 3), ((3, 7),)), DOWN, h=12.0
-> Check neighbor ((3, 1), ((3, 7),)), RIGHT, h=12.0
Bước 2: cur state= ((1, 3), ((3, 7),)), h=12.0
-> Check neighbor ((1, 1), ((1, 5),)), UP, h=14.0
-> Check neighbor ((1, 5), ((1, 5),)), DOWN, h=0.0
-> Check neighbor ((3, 3), ((3, 3),)), RIGHT, h=0.0
Bước 3: cur state= ((1, 5), ((1, 5),)), h=0.0
-> Check neighbor ((1, 3), ((1, 3),)), UP, h=0.0
-> Check neighbor ((1, 7), ((1, 7),)), DOWN, h=0.0
Bước 4: cur state= ((1, 3), ((1, 3),)), h=0.0
-> Check neighbor ((1, 1), ((1, 1),)), UP, h=0.0
Bước 5: cur state= ((1, 1), ((1, 1),)), h=0.0
-> Check neighbor ((3, 1), ((3, 1),)), RIGHT, h=0.0
Bước 6: cur state= ((1, 7), ((1, 7),)), h=0.0
-> Check neighbor ((1, 9), ((1, 9),)), DOWN, h=0.0
-> Check neighbor ((3, 7), ((3, 7),)), RIGHT, h=0.0
Bước 7: cur state= ((1, 9), ((1, 9),)), h=0.0
-> Check neighbor ((1, 11), ((1, 11),)), DOWN, h=0.0
-> Check neighbor ((3, 9), ((3, 9),)), RIGHT, h=0.0
Bước 8: cur state= ((1, 11), ((1, 11),)), h=0.0
-> Check neighbor ((3, 11), ((3, 11),)), RIGHT, h=0.0
Bước 9: cur state= ((3, 1), ((3, 1),)), h=0.0
-> Check neighbor ((5, 1), ((5, 1),)), RIGHT, h=0.0
Bước 10: cur state= ((3, 3), ((3, 3),)), h=0.0
-> Check neighbor ((3, 5), ((3, 5),)), DOWN, h=0.0
-> Check neighbor ((5, 3), ((5, 3),)), RIGHT, h=0.0
Bước 13: cur state= ((3, 5), ((3, 5),)), h=0.0
-> Check neighbor ((5, 5), ((5, 5),)), RIGHT, h=0.0
Bước 14: cur state= ((3, 7), ((3, 7),)), h=0.0
-> Check neighbor ((5, 7), ((5, 7),)), RIGHT, h=0.0
Bước 16: cur state= ((3, 9), ((3, 9),)), h=0.0
Bước 17: cur state= ((3, 11), ((3, 11),)), h=0.0
-> Check neighbor ((5, 11), ((5, 11),)), RIGHT, h=0.0
Bước 19: cur state= ((5, 1), ((5, 1),)), h=0.0
-> Check neighbor ((7, 1), ((7, 1),)), RIGHT, h=0.0
Bước 20: cur state= ((5, 3), ((5, 3),)), h=0.0
Bước 21: cur state= ((5, 5), ((5, 5),)), h=0.0
-> Check neighbor ((7, 5), ((7, 5),)), RIGHT, h=0.0
Bước 23: cur state= ((5, 7), ((5, 7),)), h=0.0
-> Check neighbor ((5, 9), ((5, 9),)), DOWN, h=0.0
-> Check neighbor ((7, 7), ((7, 7),)), RIGHT, h=0.0
Bước 25: cur state= ((5, 9), ((5, 9),)), h=0.0
-> Check neighbor ((7, 9), ((7, 9),)), RIGHT, h=0.0
Bước 26: cur state= ((5, 11), ((5, 11),)), h=0.0
-> Check neighbor ((7, 11), ((7, 11),)), RIGHT, h=0.0
Bước 28: cur state= ((7, 1), ((7, 1),)), h=0.0
-> Check neighbor ((7, 3), ((7, 3),)), DOWN, h=0.0
-> Check neighbor ((9, 1), ((9, 1),)), RIGHT, h=0.0
Bước 29: cur state= ((7, 3), ((7, 3),)), h=0.0
-> Check neighbor ((9, 3), ((9, 3),)), RIGHT, h=0.0
Bước 30: cur state= ((7, 5), ((7, 5),)), h=0.0
Bước 32: cur state= ((7, 7), ((7, 7),)), h=0.0
-> Check neighbor ((9, 7), ((9, 7),)), RIGHT, h=0.0
Bước 34: cur state= ((7, 9), ((7, 9),)), h=0.0
-> Check neighbor ((9, 9), ((9, 9),)), RIGHT, h=0.0
Bước 36: cur state= ((7, 11), ((7, 11),)), h=0.0
-> Check neighbor ((9, 11), ((9, 11),)), RIGHT, h=0.0
Bước 38: cur state= ((9, 1), ((9, 1),)), h=0.0
-> Check neighbor ((11, 1), ((11, 1),)), RIGHT, h=0.0
Bước 39: cur state= ((9, 3), ((9, 3),)), h=0.0
-> Check neighbor ((11, 3), ((11, 3),)), RIGHT, h=0.0
Bước 41: cur state= ((9, 7), ((9, 7),)), h=0.0
-> Check neighbor ((9, 5), ((9, 5),)), UP, h=0.0
-> Check neighbor ((11, 7), ((11, 7),)), RIGHT, h=0.0
Bước 42: cur state= ((9, 5), ((9, 5),)), h=0.0
-> Check neighbor ((11, 5), ((11, 5),)), RIGHT, h=0.0
Bước 43: cur state= ((9, 9), ((9, 9),)), h=0.0
Bước 45: cur state= ((9, 11), ((9, 11),)), h=0.0
-> Check neighbor ((11, 11), ((11, 11),)), RIGHT, h=0.0
Bước 47: cur state= ((11, 1), ((11, 1),)), h=0.0
Bước 48: cur state= ((11, 3), ((11, 3),)), h=0.0
Bước 50: cur state= ((11, 5), ((11, 5),)), h=0.0
SUCCESS! Tìm thấy đường đi sau 50 bước
Algorithm: Greedy
Time (s): 0.0007
Nodes/Iter: 50
Path Length: 9
