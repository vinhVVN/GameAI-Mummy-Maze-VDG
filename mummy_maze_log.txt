--- New Session Started ---
Bước 1: cur state= ((3, 11), ((3, 3),)), h=6.0
-> Check neighbor ((1, 11), ((1, 5),)), LEFT, h=10.0
-> Check neighbor ((5, 11), ((5, 5),)), RIGHT, h=8.0
Bước 2: cur state= ((5, 11), ((5, 5),)), h=8.0
-> Check neighbor ((3, 11), ((5, 5),)), LEFT, h=6.0
-> Check neighbor ((7, 11), ((7, 5),)), RIGHT, h=10.0
Bước 3: cur state= ((3, 11), ((5, 5),)), h=6.0
-> Check neighbor ((1, 11), ((5, 5),)), LEFT, h=4.0
Bước 4: cur state= ((1, 11), ((5, 5),)), h=4.0
-> Check neighbor ((1, 9), ((5, 5),)), UP, h=2.0
Bước 5: cur state= ((1, 9), ((5, 5),)), h=2.0
-> Check neighbor ((1, 7), ((5, 5),)), UP, h=0.0
-> Check neighbor ((3, 9), ((5, 5),)), RIGHT, h=4.0
Bước 6: cur state= ((1, 7), ((5, 5),)), h=0.0
-> Check neighbor ((1, 5), ((5, 5),)), UP, h=0.0
-> Check neighbor ((3, 7), ((5, 5),)), RIGHT, h=2.0
Bước 7: cur state= ((1, 5), ((5, 5),)), h=0.0
-> Check neighbor ((1, 3), ((3, 3),)), UP, h=2.0
-> Check neighbor ((3, 5), ((5, 5),)), RIGHT, h=0.0
Bước 8: cur state= ((3, 5), ((5, 5),)), h=0.0
Bước 9: cur state= ((1, 3), ((3, 3),)), h=2.0
-> Check neighbor ((1, 1), ((1, 1),)), UP, h=0.0
-> Check neighbor ((1, 5), ((1, 5),)), DOWN, h=4.0
-> Check neighbor ((3, 3), ((3, 3),)), RIGHT, h=4.0
Bước 10: cur state= ((1, 1), ((1, 1),)), h=0.0
SUCCESS! Tìm thấy đường đi sau 10 bước
Algorithm: Greedy
Time (s): 0.0003
Nodes/Iter: 10
Path Length: 8
